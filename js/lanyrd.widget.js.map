{"version":3,"sources":["lanyrd.widget.js"],"names":["lanyrd","widget","tim","e","f","g","replace","h","i","c","split","d","length","b","a","people","url","elem","options","getAttendeesTrackers","con","all","utils","when","related","fetch","tryPlaceInElement","html","append","innerHTML","render","attendees","trackers","drawList","peopleType","person","peopleTemplate","personTemplate","builtUpTemplate","user","list","deferred","promise","headingLevel","conference","resolve","isArray","map","mergeRelated","pipe","merged","then","get"],"mappings":"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","file":"lanyrd.widget.js","sourcesContent":["/* global lanyrd */\n\n/*\n    Lanyrd widget. An extension on top of the Lanyrd API.\n*/\n\n(function() {\n\"use strict\";\n\n//\n// Extend Lanyrd as `lanyrd.widget`\n\nlanyrd.widget = {};\n\n//\n// Tim (a tiny, secure JavaScript micro-templating script)\n// https://github.com/premasagar/tim\n\nvar tim = function() {var e = /{{\\s*([a-z0-9_][\\\\.a-z0-9_]*)\\s*}}/gi;return function( f, g ) {return f.replace( e, function( h, i ) {for ( var c = i.split(\".\"), d = c.length, b = g, a = 0; a < d; a++ ) {b = b[ c[ a ] ];if ( b === void 0 )throw\"tim: '\" + c[ a ] + \"' not found in \" + h;if ( a === d - 1 )return b;}});};}();\n\n//\n// Here be Widgets !\n\n// People widget\n//\n// Returns a promise wrapped html string containing markup primarily showing the avatars\n// of event(s) attendees and trackers.\n//\n// parameters:\n// - url:           A lanyrd conference url or an array of lanyrd conference urls\n// - elem:          An optional html dom element which will be populated with the rendered\n//                  html template. The html is also passed to the promise resolution\n//                  callback.\n// - options:       Object of key value pairs detailing lower level parameters\n//  - all:          Flag which determines how many trackers/attendees will be\n//                  displayed. (true by default)\n//  - append:       Flag for determining how the rendered html template is inserted\n//                  into the provided dom element. If false any html in the supplied\n//                  dom element will be overwritten. (false by default)\n//  - headingLevel  Number which decides what heading level tags the rendered html\n//                  should use. (2 by default)\n\nlanyrd.widget.people = function( url, elem, options ) {\n    var promise,\n        conference,\n        options = options || {};\n    options.all = options.all || true;\n    options.headingLevel = options.headingLevel || 2;\n\n    if ( lanyrd.utils.isArray( url ) && url.length > 1 ) {\n\n      // Get all attendees and trackers for merged lanyrd conference events\n      // 1. Convert passed urls to equivalent Lanyrd api resource objects\n      // 2. Pass merged attendees and trackers to render and return render's\n      //    promise.\n\n      url = lanyrd.utils.map( url, function( url ) {\n          return lanyrd.conference( url ).fetch();\n        });\n\n      promise = lanyrd.mergeRelated( url, { related: [ \"attendees\", \"trackers\" ] })\n                .pipe(function( merged ) {\n                    return render( merged.attendees, merged.trackers )\n                    .then( tryPlaceInElement );\n                  });\n    } else {\n\n      // Get attendees and trackers for a lanyrd conference event\n      // 1. Change single item array as string\n      // 2. Fetch conference data\n      // 3. Get related attendees and trackers\n      // 4. Pass attendees and trackers to render and return render's\n      //   promise.\n\n      url += \"\";\n      promise = lanyrd.conference( url ).fetch()\n                .pipe(function( con ) {\n                    conference = con.get(\"conference\" );\n                    return con;\n                  })\n                .pipe( getAttendeesTrackers )\n                .pipe(function( attendees, trackers ) {\n                    return render(\n                        attendees.get( \"attendees\" ),\n                        trackers.get( \"trackers\" )\n                    )\n                    .then( tryPlaceInElement );\n                  });\n    }\n\n    // Returns a promise representing the retrieval of both the attendees\n    // and the trackers. The amount of attendees/trackers passed to the\n    // promise resolution is dependant on the options.all parameter.\n\n    function getAttendeesTrackers( con ) {\n      if ( options.all ) {\n        return lanyrd.utils.when(\n            con.related(\"conference.attendees\" ).all(),\n            con.related(\"conference.trackers\" ).all()\n        );\n      } else {\n        return lanyrd.utils.when(\n            con.related(\"conference.attendees\" ).fetch(),\n            con.related( \"conference.trackers\" ).fetch()\n        );\n      }\n    }\n\n    // Places the generated html in the supplied html dom element\n    // (if given).\n\n    function tryPlaceInElement( html ) {\n      if ( elem ) {\n        if ( options.append ) {\n          elem.innerHTML += html;\n        } else {\n          elem.innerHTML = html;\n        }\n      }\n    }\n\n    // A render function unique to lanyrd.widget.people\n\n    function render( attendees, trackers ) {\n      var deferred = lanyrd.utils.deferred(),\n          promise = deferred.promise(),\n          html = \"\";\n\n      // returns attendees and trackers markup\n\n      function drawList( people, peopleType ) {\n        var peopleTemplate = options.peopleTemplate || '<ul class=\"lanyrd-people {{peopleType}}\">{{list}}</ul>',\n            personTemplate = options.personTemplate || '<li><a href=\"{{web_url}}\"><img class=\"lanyrd-avatar\" title=\"{{name}} ({{username}})\" src=\"{{avatar_url}}\"></a></li>',\n            builtUpTemplate = \"\",\n            person,\n            i = 0;\n\n        for ( i; i < people.length; i++ ) {\n          person = people[ i ].user || people[ i ];\n          builtUpTemplate += tim( personTemplate, person );\n        }\n        html += tim( peopleTemplate, { list: builtUpTemplate, peopleType: peopleType });\n      }\n\n      // Build the rest of the template\n      // (!) Needs cleanup!\n      // Only 'see more attendees' link supported on single conferences (no merged events)\n\n      // Attendees heading\n      html += \"<h\" + options.headingLevel + ' class=\"lanyrd-attendees-title\">' + attendees.length +\n                  \" attending</h\" + options.headingLevel + \">\";\n\n      // Attendee avatars\n      drawList( attendees, \"lanyrd-attendees\" );\n\n      // Provide conference link to conferences\n      if ( conference ) {\n        html += tim( '<p><a target=\"_blank\" href={{web_url}}' + \"attendees\" + \">&rarr; Attendee details</a></p>\", conference );\n      }\n\n      if ( trackers.length > 0 ) {\n        // Trackers heading\n        html += \"<h\" + options.headingLevel + ' class=\"lanyrd-trackers-title\">' + trackers.length +\n                    \" tracking</h\" + options.headingLevel + \">\";\n        // Tracker avatars\n        drawList( trackers, \"lanyrd-trackers\" );\n      }\n\n      // Encapsulating div and embedded style\n      html = '<div class=\"lanyrd-widget\">' +\n                 \"<style>\" +\n                      \".lanyrd-people, .lanyrd-people li  {\" +\n                          \"padding: 0;\" +\n                          \"margin: 0;\" +\n                      \"}\" +\n                      \".lanyrd-people, .lanyrd-people li {\" +\n                         \" overflow: hidden;\" +\n                      \"}\" +\n                      \".lanyrd-people li {\" +\n                          \"list-style: none;\" +\n                          \"float: left;\" +\n                          \"padding-right: 6px;\" +\n                      \"}\" +\n                 \"</style>\" +\n                 html +\n             \"</div>\";\n\n      // Instantly resolve and pass rendered html as promise\n\n      deferred.resolve( html );\n      return promise;\n    }\n\n    return promise;\n  };\n\n// Person widget\n// (!) to be revised\n\nlanyrd.widget.person = function( url, elem, options ) {\n    var promise,\n        options = options || {};\n\n    function render( person ) {\n      var deferred = lanyrd.utils.deferred(),\n          promise = deferred.promise(),\n          html,\n          personTemplate = options.personTemplate || '<h2><a href=\"{{web_url}}\">{{name}}</a></h2>' +\n                     '<img class=\"lanyrd-avatar\" title=\"{{name}} ({{username}})\" src=\"{{avatar_url}}\">' +\n                     \"<p>{{short_bio}}</p>\";\n\n      html = tim( personTemplate, person );\n      deferred.resolve( html );\n      return promise;\n    }\n\n    promise = lanyrd.person( url ).fetch()\n        .pipe(function( person ) {\n            return person.get(\"user\" );\n          })\n        .pipe(function( person ) {\n            return render( person ).then(function( html ) {\n                if ( elem ) elem.innerHTML = html;\n              });\n          });\n\n    return promise;\n  };\n\n}());\n"]}